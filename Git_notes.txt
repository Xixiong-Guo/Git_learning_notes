1. Basic command:

git init  % add this directory to git repo

git add filename  % add the file to the repo
git commit -m "modification reason"  % officially commite to repo

git status % check the status of the file

git log %  (or git log --pretty=oneline)

git reset --hard HEAD^  %(HEAD IS CURRENT VERSION, HEAD^ LAST VERSION (OR HEAD~1))

git reset --hard commit_id % do not need full id, first few digits

git reglog % if we forget the commit_id, use it to check history


2. UNDERSTANDING HOW STAGE WORKS
Working directory and Stage (git add, all changes put in stage, before commit)
After all changes are added and commited, then git status: nothing to commit, working tree clean


Undo Changes

git checkout -- file  % Undo the changes, back to recent git commit status
git reset HEAD <file>  % unstage the change, after you already git add, then git checkout

Delete files

1. rm file, then git rm file, and git commit -m "remove ..."  % delete the file from the repo
2. Delete mistakely, want to restore: git checkout -- file


3.Github repo vs local repo

Push local repo to github

1. New repo on github
2. git remote add origin git@github.com:Xixiong-Guo/....git
3. git push -u origin master  % first time on repo "-u", following pust use git pust origin master

Reversely, clone repo from github to local:
git clone git@github.com:directory
*****************************
How to solve problem "Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
"

Solution: 
generate a new ssh key: a. delete /user/../.ssh folder
b.ssh-keygen -t rsa -C "your@email.com", press "enter" when necessary
c. two files generated in .ssh folder: id_rsa, id_rsa.pub, copy all contents in id_rsa.pub
d. github.com - SSH AND GPG KEYS - NEW SSH KEYS, paste the contents, and add ssh key
e. ssh -T git@github.com, type 'yes'
f. DONE!!!
******************************



4. Branch management:
git checkout -b <name> or git switch -c <name> % create and swith a branch
git branch % check branch, branch name start with "*"
git checkout master % switch to master
git merge <name> % merge the branch to master (in master branch)
git branch -d <name> % delete branch

Commit conflict: when branch and master change and commit the same file, with different contents, then there's a conflict. Have to manually solve it and then merge.

5. Tag management
git tag v1.0  % in master branch, new tag "v1.0"
git tag v0.9 f52c633  % add tag on commit id "....", -a tag name, -m comments
git tag -d v0.1  % delete tag
git push origin <tagname>  % push a local tag 
git push origin :refs/tags/<tagname>  % delete a remote tag

6. Github repo 

If you want to participate in any github project, first of all, fork the repo , change in your own repo (fork repo), pull request to author